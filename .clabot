{
  "contributorListGithubUrl": "https://api.github.com/repos/maoo/clabot-test/contents/contributors.json",
  "label": "cla-present",
  "message": "Thank you for your contribution and **Welcome to our Open Source Community!**\n\nTo make sure your pull request is accepted successfully, we ask all our open source contributors to sign a [Contributor License Agreement](https://finosfoundation.atlassian.net/wiki/spaces/FINOS/pages/75530375/Legal+Requirements#LegalRequirements-ContributorLicenseAgreement).\n\nHaving reviewed our contributor list, we require a CLA for the following people : ({{usersWithoutCLA}}).\n\nIf you need help obtaining a CLA, please read the [Requirements for Contributions](https://finosfoundation.atlassian.net/wiki/spaces/FINOS/pages/75530375/Legal+Requirements#LegalRequirements-ContributorLicenseAgreement) section of our CLA wiki or email [help@finos.org](mailto:help@finos.org) with your questions.\n\nThanks once again for your contribution. Let us work with you to make the CLA process quick, easy and efficient so we can move forward with reviewing and accepting your pull request.\n\n_cc_ **@finos-admin**",
  "messageMissingEmail": "Thank you for your contribution and **Welcome to our Open Source Community!**\n\nTo make sure your pull request is successful, we need all our contributors to be identifiable, but we couldn't parse the GitHub details of the following people : {{unidentifiedUsers}}\n\nLuckily, resolving the issue is straightforward and you can resolve it by following the instructions below.\n\n1. Check your git client is configured with a user email `git config --list | grep email`\n2. If a user email is missing, run the following command, substituting with your git commit email address `git config --global user.email email@example.com`\n3. Make sure your git commit email is configured on GitHub by [Setting your Commit Email Address](https://help.github.com/en/github/setting-up-and-managing-your-github-user-account/setting-your-commit-email-address)\n4. Then, amend the authors in your commit history by using `git commit --amend` to change your last commit.\n\nAlternatively, use the slightly more complex `git reset --soft` and `git rebase` to checkout your changes, rewrite the commit history locally and (force) push changes to the downstream branch.\n\nIf you have any issues with the steps above, please email [help@finos.org](mailto:help@finos.org) so we can help you resolve before reviewing and accepting your pull request.\n\nThanks once again for contribution and understanding.\n\n_cc_ **@finos-admin**"
}
